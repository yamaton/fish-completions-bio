# Auto-generated with h2o

complete -c dorado -n "not __fish_seen_subcommand_from aligner basecaller correct demux download duplex polish summary trim" -s "h" -l "help" -d "shows help message and exits"
complete -c dorado -n "not __fish_seen_subcommand_from aligner basecaller correct demux download duplex polish summary trim" -s "v" -l "version" -d "prints version information and exits"
complete -c dorado -n "not __fish_seen_subcommand_from aligner basecaller correct demux download duplex polish summary trim" -o "vv" -d "prints verbose version information and exits"



complete -k -c dorado -n __fish_use_subcommand -x -a trim -d "Adapter/primer trimming tool"
complete -k -c dorado -n __fish_use_subcommand -x -a summary -d "Summary of basecaller outputs"
complete -k -c dorado -n __fish_use_subcommand -x -a polish -d "Consensus tool for polishing draft assemblies"
complete -k -c dorado -n __fish_use_subcommand -x -a duplex -d "Duplex basecalling"
complete -k -c dorado -n __fish_use_subcommand -x -a download -d "Download models"
complete -k -c dorado -n __fish_use_subcommand -x -a demux -d "Barcode demultiplexing tool"
complete -k -c dorado -n __fish_use_subcommand -x -a correct -d "Dorado read correction tool"
complete -k -c dorado -n __fish_use_subcommand -x -a basecaller -d "Basecaller"
complete -k -c dorado -n __fish_use_subcommand -x -a aligner -d "Alignment using minimap2"



complete -c dorado -n "__fish_seen_subcommand_from aligner" -s "h" -l "help" -d "shows help message and exits"
complete -c dorado -n "__fish_seen_subcommand_from aligner" -s "r" -l "recursive" -d "If the 'reads' positional argument is a folder any subfolders will also be searched for input files."
complete -c dorado -n "__fish_seen_subcommand_from aligner" -s "o" -l "output-dir" -d "If specified output files will be written to the given folder, otherwise output is to stdout."
complete -c dorado -n "__fish_seen_subcommand_from aligner" -l "emit-summary" -d "If specified, a summary file containing the details of the primary alignments for each read will be emitted to the root of the output folder."
complete -c dorado -n "__fish_seen_subcommand_from aligner" -l "bed-file" -d "Optional bed-file."
complete -c dorado -n "__fish_seen_subcommand_from aligner" -s "t" -l "threads" -d "number of threads for alignment and BAM writing (0=unlimited)."
complete -c dorado -n "__fish_seen_subcommand_from aligner" -s "n" -l "max-reads" -d "maximum number of reads to process (for debugging, 0=unlimited)."
complete -c dorado -n "__fish_seen_subcommand_from aligner" -s "v" -l "verbose" -d "[may be repeated]"
complete -c dorado -n "__fish_seen_subcommand_from aligner" -l "mm2-opts" -d "Optional minimap2 options string."



complete -c dorado -n "__fish_seen_subcommand_from basecaller" -s "h" -l "help" -d "shows help message and exits"
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -s "v" -l "verbose" -d "[may be repeated]"
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -s "x" -l "device" -d "Specify CPU or GPU device: 'auto', 'cpu', 'cuda:all' or 'cuda:<device_id>[,<device_id>...]'."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "models-directory" -d "Optional directory to search for existing models or download new models into."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "bed-file" -d "Optional bed-file."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -s "r" -l "recursive" -d "Recursively scan through directories to load FAST5 and POD5 files."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -s "l" -l "read-ids" -d "A file with a newline-delimited list of reads to basecall."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -s "n" -l "max-reads" -d "Limit the number of reads to be basecalled."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "resume-from" -d "Resume basecalling from the given HTS file."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "min-qscore" -d "Discard reads with mean Q-score below this threshold."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "emit-moves" -d "Write the move table to the 'mv' tag."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "emit-fastq" -d "Output in fastq format."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "emit-sam" -d "Output in SAM format."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -s "o" -l "output-dir" -d "Optional output folder, if specified output will be written to a calls file (calls_<timestamp>.sam|.bam|.fastq) in the given folder."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "reference" -d "Path to reference for alignment."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "mm2-opts" -d "Optional minimap2 options string."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "modified-bases" -d "A space separated list of modified base codes."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "modified-bases-models" -d "A comma separated list of modified base model paths."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "modified-bases-threshold" -d "The minimum predicted methylation probability for a modified base to be emitted in an all-context model, [0, 1]."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "modified-bases-batchsize" -d "The modified base models batch size."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "kit-name" -d "Enable barcoding with the provided kit name."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "sample-sheet" -d "Path to the sample sheet to use."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "barcode-both-ends" -d "Require both ends of a read to be barcoded for a double ended barcode."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "barcode-arrangement" -d "Path to file with custom barcode arrangement."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "barcode-sequences" -d "Path to file with custom barcode sequences."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "primer-sequences" -d "Path to file with custom primer sequences."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "no-trim" -d "Skip trimming of barcodes, adapters, and primers."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "trim" -d "Specify what to trim."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "estimate-poly-a" -d "Estimate poly(A)/poly(T) tail lengths (beta feature)."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "poly-a-config" -d "Configuration file for poly(A) estimation to change default behaviours [nargs=0..1] [default: \"\"]"
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -s "b" -l "batchsize" -d "The number of chunks in a batch."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -s "c" -l "chunksize" -d "The number of samples in a chunk."
complete -c dorado -n "__fish_seen_subcommand_from basecaller" -l "overlap" -d "The number of samples overlapping neighbouring chunks."



complete -c dorado -n "__fish_seen_subcommand_from correct" -s "h" -l "help" -d "shows help message and exits"
complete -c dorado -n "__fish_seen_subcommand_from correct" -s "t" -l "threads" -d "Number of threads for processing."
complete -c dorado -n "__fish_seen_subcommand_from correct" -l "infer-threads" -d "Number of threads per device."
complete -c dorado -n "__fish_seen_subcommand_from correct" -s "x" -l "device" -d "Specify CPU or GPU device: 'auto', 'cpu', 'cuda:all' or 'cuda:<device_id>[,<device_id>...]'."
complete -c dorado -n "__fish_seen_subcommand_from correct" -s "v" -l "verbose" -d "[may be repeated]"
complete -c dorado -n "__fish_seen_subcommand_from correct" -s "m" -l "model-path" -d "Path to correction model folder."
complete -c dorado -n "__fish_seen_subcommand_from correct" -s "p" -l "from-paf" -d "Path to a PAF file with alignments."
complete -c dorado -n "__fish_seen_subcommand_from correct" -l "to-paf" -d "Generate PAF alignments and skip consensus."
complete -c dorado -n "__fish_seen_subcommand_from correct" -l "resume-from" -d "Resume a previously interrupted run."
complete -c dorado -n "__fish_seen_subcommand_from correct" -s "b" -l "batch-size" -d "Batch size for inference."
complete -c dorado -n "__fish_seen_subcommand_from correct" -s "i" -l "index-size" -d "Size of index for mapping and alignment."
complete -c dorado -n "__fish_seen_subcommand_from correct" -l "compute-num-blocks" -d "Computes and returns one number: the number of index blocks which would be processed on a normal run."
complete -c dorado -n "__fish_seen_subcommand_from correct" -l "run-block-id" -d "ID of the index block to run."



complete -c dorado -n "__fish_seen_subcommand_from demux" -s "h" -l "help" -d "shows help message and exits"
complete -c dorado -n "__fish_seen_subcommand_from demux" -s "r" -l "recursive" -d "If the 'reads' positional argument is a folder any subfolders will also be searched for input files."
complete -c dorado -n "__fish_seen_subcommand_from demux" -s "o" -l "output-dir" -d "Output folder for demultiplexed reads."
complete -c dorado -n "__fish_seen_subcommand_from demux" -l "kit-name" -d "Barcoding kit name."
complete -c dorado -n "__fish_seen_subcommand_from demux" -l "sample-sheet" -d "Path to the sample sheet to use."
complete -c dorado -n "__fish_seen_subcommand_from demux" -l "no-classify" -d "Skip barcode classification."
complete -c dorado -n "__fish_seen_subcommand_from demux" -s "t" -l "threads" -d "Combined number of threads for barcoding and output generation."
complete -c dorado -n "__fish_seen_subcommand_from demux" -s "n" -l "max-reads" -d "Maximum number of reads to process."
complete -c dorado -n "__fish_seen_subcommand_from demux" -s "l" -l "read-ids" -d "A file with a newline-delimited list of reads to demux."
complete -c dorado -n "__fish_seen_subcommand_from demux" -s "v" -l "verbose" -d "[may be repeated]"
complete -c dorado -n "__fish_seen_subcommand_from demux" -l "emit-fastq" -d "Output in fastq format."
complete -c dorado -n "__fish_seen_subcommand_from demux" -l "emit-summary" -d "If specified, a summary file containing the details of the primary alignments for each read will be emitted to the root of the output folder."
complete -c dorado -n "__fish_seen_subcommand_from demux" -l "barcode-both-ends" -d "Require both ends of a read to be barcoded for a double ended barcode."
complete -c dorado -n "__fish_seen_subcommand_from demux" -l "no-trim" -d "Skip barcode trimming."
complete -c dorado -n "__fish_seen_subcommand_from demux" -l "sort-bam" -d "Sort any BAM output files that contain mapped reads."
complete -c dorado -n "__fish_seen_subcommand_from demux" -l "barcode-arrangement" -d "Path to file with custom barcode arrangement."
complete -c dorado -n "__fish_seen_subcommand_from demux" -l "barcode-sequences" -d "Path to file with custom barcode sequences."



complete -c dorado -n "__fish_seen_subcommand_from download" -s "h" -l "help" -d "shows help message and exits"
complete -c dorado -n "__fish_seen_subcommand_from download" -l "model" -d "the model to download [nargs=0..1] [default: \"all\"]"
complete -c dorado -n "__fish_seen_subcommand_from download" -l "models-directory" -d "the directory to download the models into [nargs=0..1] [default: \".\"]"
complete -c dorado -n "__fish_seen_subcommand_from download" -l "list" -d "list the available models for download"
complete -c dorado -n "__fish_seen_subcommand_from download" -l "list-yaml" -d "list the available models for download, as yaml, to stdout"
complete -c dorado -n "__fish_seen_subcommand_from download" -l "list-structured" -d "list the available models in a structured format, as yaml, to stdout"
complete -c dorado -n "__fish_seen_subcommand_from download" -l "data" -d "path to POD5 data used to automatically select models [nargs=0..1] [default: \"\"]"
complete -c dorado -n "__fish_seen_subcommand_from download" -s "r" -l "recursive" -d "recursively scan through directories to load POD5 files"
complete -c dorado -n "__fish_seen_subcommand_from download" -l "overwrite" -d "overwrite existing models if they already exist"
complete -c dorado -n "__fish_seen_subcommand_from download" -s "v" -l "verbose" -d "[may be repeated]"



complete -c dorado -n "__fish_seen_subcommand_from duplex" -s "h" -l "help" -d "shows help message and exits"
complete -c dorado -n "__fish_seen_subcommand_from duplex" -s "v" -l "verbose" -d "[may be repeated]"
complete -c dorado -n "__fish_seen_subcommand_from duplex" -s "x" -l "device" -d "Specify CPU or GPU device: 'auto', 'cpu', 'cuda:all' or 'cuda:<device_id>[,<device_id>...]'."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -l "models-directory" -d "Optional directory to search for existing models or download new models into."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -s "r" -l "recursive" -d "Recursively scan through directories to load FAST5 and POD5 files."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -s "l" -l "read-ids" -d "A file with a newline-delimited list of reads to basecall."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -l "pairs" -d "Space-delimited csv containing read ID pairs."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -l "min-qscore" -d "Discard reads with mean Q-score below this threshold."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -l "emit-fastq" -d "Output in fastq format."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -l "emit-sam" -d "Output in SAM format."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -s "o" -l "output-dir" -d "Optional output folder, if specified output will be written to a calls file (calls_<timestamp>.sam|.bam|.fastq) in the given folder."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -l "reference" -d "Path to reference for alignment."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -l "mm2-opts" -d "Optional minimap2 options string."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -l "bed-file" -d "Optional bed-file."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -l "modified-bases" -d "A space separated list of modified base codes."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -l "modified-bases-models" -d "A comma separated list of modified base models [nargs=0..1] [default: \"\"]"
complete -c dorado -n "__fish_seen_subcommand_from duplex" -l "modified-bases-threshold" -d "The minimum predicted methylation probability for a modified base to be emitted in an all-context model, [0, 1]."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -l "modified-bases-batchsize" -d "The modified base models batch size."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -s "t" -l "threads" -d "[nargs=0..1] [default: 0]"
complete -c dorado -n "__fish_seen_subcommand_from duplex" -s "b" -l "batchsize" -d "The number of chunks in a batch."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -s "c" -l "chunksize" -d "The number of samples in a chunk."
complete -c dorado -n "__fish_seen_subcommand_from duplex" -l "overlap" -d "The number of samples overlapping neighbouring chunks."



complete -c dorado -n "__fish_seen_subcommand_from polish" -s "h" -l "help" -d "shows help message and exits"
complete -c dorado -n "__fish_seen_subcommand_from polish" -s "t" -l "threads" -d "Number of threads for processing (0=unlimited)."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "infer-threads" -d "Number of threads for inference [nargs=0..1] [default: 2]"
complete -c dorado -n "__fish_seen_subcommand_from polish" -s "x" -l "device" -d "Specify CPU or GPU device: 'auto', 'cpu', 'cuda:all' or 'cuda:<device_id>[,<device_id>...]'."
complete -c dorado -n "__fish_seen_subcommand_from polish" -s "v" -l "verbose" -d "[may be repeated]"
complete -c dorado -n "__fish_seen_subcommand_from polish" -s "o" -l "output-dir" -d "If specified, output files will be written to the given folder."
complete -c dorado -n "__fish_seen_subcommand_from polish" -s "m" -l "model" -d "Path to correction model folder."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "bacteria" -d "Optimise polishing for plasmids and bacterial genomes."
complete -c dorado -n "__fish_seen_subcommand_from polish" -s "q" -l "qualities" -d "Output with per-base quality scores (FASTQ)."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "vcf" -d "Output a VCF file with variant calls to --output-dir if specified, otherwise to stdout."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "gvcf" -d "Output a gVCF file to --output-dir if specified, otherwise to stdout."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "ambig-ref" -d "Decode variants at ambiguous reference positions."
complete -c dorado -n "__fish_seen_subcommand_from polish" -s "b" -l "batchsize" -d "Batch size for inference."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "draft-batchsize" -d "Approximate batch size for processing input draft sequences."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "window-len" -d "Window size for calling consensus."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "window-overlap" -d "Overlap length between windows."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "bam-chunk" -d "Size of draft chunks to parse from the input BAM at a time."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "bam-subchunk" -d "Size of regions to split the bam_chunk in to for parallel processing [nargs=0..1] [default: 100000]"
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "no-fill-gaps" -d "Do not fill gaps in consensus sequence with draft sequence."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "fill-char" -d "Use a designated character to fill gaps."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "regions" -d "Process only these regions of the input."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "RG" -d "Read group to select."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "ignore-read-groups" -d "Ignore read groups in bam file."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "tag-name" -d "Two-letter BAM tag name for filtering the alignments during feature generation [nargs=0..1] [default: \"\"]"
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "tag-value" -d "Value of the tag for filtering the alignments during feature generation [nargs=0..1] [default: 0]"
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "tag-keep-missing" -d "Keep alignments when tag is missing."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "min-mapq" -d "Minimum mapping quality of the input alignments."
complete -c dorado -n "__fish_seen_subcommand_from polish" -l "min-depth" -d "Sites with depth lower than this value will not be polished."



complete -c dorado -n "__fish_seen_subcommand_from summary" -s "h" -l "help" -d "shows help message and exits"
complete -c dorado -n "__fish_seen_subcommand_from summary" -s "s" -l "separator" -d "[nargs=0..1] [default: \" \"]"
complete -c dorado -n "__fish_seen_subcommand_from summary" -s "v" -l "verbose" -d "[may be repeated]"



complete -c dorado -n "__fish_seen_subcommand_from trim" -s "h" -l "help" -d "shows help message and exits"
complete -c dorado -n "__fish_seen_subcommand_from trim" -s "t" -l "threads" -d "Combined number of threads for adapter/primer detection and output generation."
complete -c dorado -n "__fish_seen_subcommand_from trim" -s "n" -l "max-reads" -d "Maximum number of reads to process."
complete -c dorado -n "__fish_seen_subcommand_from trim" -s "k" -l "sequencing-kit" -d "Sequencing kit name to use for selecting adapters and primers to trim."
complete -c dorado -n "__fish_seen_subcommand_from trim" -s "l" -l "read-ids" -d "A file with a newline-delimited list of reads to trim."
complete -c dorado -n "__fish_seen_subcommand_from trim" -s "v" -l "verbose" -d "[may be repeated]"
complete -c dorado -n "__fish_seen_subcommand_from trim" -l "emit-fastq" -d "Output in fastq format."
complete -c dorado -n "__fish_seen_subcommand_from trim" -l "no-trim-primers" -d "Skip primer detection and trimming."
complete -c dorado -n "__fish_seen_subcommand_from trim" -l "primer-sequences" -d "Path to file with custom primer sequences."
